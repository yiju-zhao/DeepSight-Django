# Generated by Django 5.2.4 on 2025-10-01 13:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('notebooks', '0002_delete_notebookchatmessage'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('topic', models.CharField(blank=True, help_text='Research topic', max_length=500)),
                ('article_title', models.CharField(default='Research Report', max_length=255)),
                ('old_outline', models.TextField(blank=True, help_text='User-provided outline content to use as starting point')),
                ('selected_files_paths', models.JSONField(blank=True, default=list, help_text='List of file folder paths from knowledge base')),
                ('csv_session_code', models.CharField(blank=True, max_length=100)),
                ('csv_date_filter', models.CharField(blank=True, max_length=20)),
                ('model_provider', models.CharField(choices=[('openai', 'OpenAI'), ('google', 'Google')], default='openai', max_length=50)),
                ('retriever', models.CharField(choices=[('tavily', 'Tavily'), ('brave', 'Brave'), ('serper', 'Serper'), ('you', 'You'), ('bing', 'Bing'), ('duckduckgo', 'DuckDuckGo'), ('searxng', 'SearXNG'), ('azure_ai_search', 'Azure AI Search')], default='tavily', max_length=50)),
                ('temperature', models.FloatField(default=0.2, help_text='Temperature for LLM generation (0.0-2.0)')),
                ('top_p', models.FloatField(default=0.4, help_text='Top-p for LLM generation (0.0-1.0)')),
                ('prompt_type', models.CharField(choices=[('general', 'General'), ('financial', 'Financial'), ('paper', 'Paper')], default='general', max_length=50)),
                ('do_research', models.BooleanField(default=True)),
                ('do_generate_outline', models.BooleanField(default=True)),
                ('do_generate_article', models.BooleanField(default=True)),
                ('do_polish_article', models.BooleanField(default=True)),
                ('remove_duplicate', models.BooleanField(default=True)),
                ('post_processing', models.BooleanField(default=True)),
                ('max_conv_turn', models.PositiveIntegerField(default=3, help_text='Maximum conversation turns (1-10)')),
                ('max_perspective', models.PositiveIntegerField(default=3, help_text='Maximum perspectives (1-10)')),
                ('search_top_k', models.PositiveIntegerField(default=10, help_text='Top K search results (5-50)')),
                ('initial_retrieval_k', models.PositiveIntegerField(default=150, help_text='Initial retrieval K (50-500)')),
                ('final_context_k', models.PositiveIntegerField(default=20, help_text='Final context K (10-100)')),
                ('reranker_threshold', models.FloatField(default=0.5, help_text='Reranker threshold (0.0-1.0)')),
                ('max_thread_num', models.PositiveIntegerField(default=10, help_text='Maximum threads (1-20)')),
                ('time_range', models.CharField(blank=True, choices=[('ALL', 'All Time'), ('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], max_length=20, null=True)),
                ('include_domains', models.BooleanField(default=False)),
                ('skip_rewrite_outline', models.BooleanField(default=False)),
                ('domain_list', models.JSONField(blank=True, default=list, help_text='Whitelist domains')),
                ('include_image', models.BooleanField(default=True, help_text='Whether to include figure data (images) during report generation')),
                ('search_depth', models.CharField(choices=[('basic', 'Basic'), ('advanced', 'Advanced')], default='basic', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress', models.CharField(blank=True, help_text='Current progress message', max_length=500)),
                ('result_content', models.TextField(blank=True, help_text='Generated report content')),
                ('error_message', models.TextField(blank=True)),
                ('main_report_object_key', models.CharField(blank=True, db_index=True, help_text='MinIO object key for main report file', max_length=255, null=True)),
                ('file_metadata', models.JSONField(default=dict, help_text='All file paths, names, sizes, etc.')),
                ('generated_files', models.JSONField(blank=True, default=list, help_text='List of generated file object keys')),
                ('processing_logs', models.JSONField(blank=True, default=list, help_text='Processing log messages')),
                ('celery_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notebooks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='notebooks.notebook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('figure_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique figure identifier from knowledge base')),
                ('image_caption', models.TextField(blank=True, help_text='Description or caption for the image')),
                ('report_figure_minio_object_key', models.CharField(db_index=True, help_text='MinIO object key for the image file in report folder', max_length=255)),
                ('image_metadata', models.JSONField(default=dict, help_text='Image metadata including dimensions, format, size, etc.')),
                ('content_type', models.CharField(blank=True, help_text='MIME type of the image (image/png, image/jpeg, etc.)', max_length=100)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report', models.ForeignKey(help_text='Report this image belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='reports.report')),
            ],
            options={
                'verbose_name': 'Report Image',
                'verbose_name_plural': 'Report Images',
                'ordering': ['report', 'created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['user', 'status'], name='reports_rep_user_id_8456e4_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['main_report_object_key'], name='reports_rep_main_re_462cd9_idx'),
        ),
        migrations.AddIndex(
            model_name='reportimage',
            index=models.Index(fields=['report', 'created_at'], name='reports_rep_report__0056c2_idx'),
        ),
        migrations.AddIndex(
            model_name='reportimage',
            index=models.Index(fields=['report_figure_minio_object_key'], name='reports_rep_report__67d7e1_idx'),
        ),
    ]
