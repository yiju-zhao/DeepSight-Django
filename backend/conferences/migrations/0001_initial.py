# Generated by Django 5.2.4 on 2025-09-18 15:48

import conferences.models
import django.db.models.deletion
import storages.backends.s3
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('instance_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('location', models.CharField(max_length=255)),
                ('website', models.CharField(max_length=255)),
                ('summary', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('abstract', models.TextField()),
                ('transcript', models.TextField()),
                ('expert_view', models.TextField()),
                ('ai_analysis', models.TextField()),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='conferences.instance')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('authors', models.CharField(max_length=255)),
                ('aff', models.CharField(max_length=255)),
                ('aff_unique', models.CharField(blank=True, max_length=500, null=True)),
                ('aff_country_unique', models.CharField(blank=True, max_length=255, null=True)),
                ('author_position', models.CharField(blank=True, max_length=500, null=True)),
                ('author_homepage', models.CharField(blank=True, max_length=1000, null=True)),
                ('abstract', models.TextField()),
                ('summary', models.TextField()),
                ('session', models.CharField(blank=True, max_length=255, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('keywords', models.CharField(max_length=500)),
                ('research_topic', models.CharField(max_length=500)),
                ('tag', models.CharField(max_length=255)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('doi', models.CharField(max_length=255)),
                ('pdf_url', models.CharField(max_length=255)),
                ('github', models.URLField(blank=True, null=True)),
                ('site', models.URLField(blank=True, null=True)),
                ('raw_file', models.FileField(blank=True, help_text='PDF file stored in MinIO', null=True, storage=storages.backends.s3.S3Storage(), upload_to=conferences.models.publication_file_path)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='conferences.instance')),
            ],
        ),
        migrations.AddField(
            model_name='instance',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='conferences.venue'),
        ),
    ]
