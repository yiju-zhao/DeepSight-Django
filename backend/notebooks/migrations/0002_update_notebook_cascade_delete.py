# Generated by Django 5.2.4 on 2025-09-09 18:32

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('notebooks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this chat session', unique=True)),
                ('title', models.CharField(blank=True, help_text='Display title for this session (auto-generated if empty)', max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed'), ('archived', 'Archived')], default='active', help_text='Current status of the session', max_length=20)),
                ('ragflow_session_id', models.CharField(blank=True, help_text='RagFlow session ID for API calls', max_length=100, null=True)),
                ('ragflow_agent_id', models.CharField(blank=True, help_text='RagFlow agent ID associated with this session', max_length=100, null=True)),
                ('session_metadata', models.JSONField(blank=True, help_text='Additional session configuration and metadata', null=True)),
                ('last_activity', models.DateTimeField(auto_now=True, help_text='Last time there was activity in this session')),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='When this session was started')),
                ('ended_at', models.DateTimeField(blank=True, help_text='When this session was closed/ended', null=True)),
                ('notebook', models.ForeignKey(help_text='Notebook this chat session belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to='notebooks.notebook')),
            ],
            options={
                'verbose_name': 'Chat Session',
                'verbose_name_plural': 'Chat Sessions',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='SessionChatMessage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sender', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant')], help_text='Who sent this message', max_length=10)),
                ('message', models.TextField(help_text='Content of the chat message')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the message was sent')),
                ('metadata', models.JSONField(blank=True, help_text='Additional metadata like sources, confidence, tokens used, etc.', null=True)),
                ('message_order', models.PositiveIntegerField(default=0, help_text='Order of this message within the session')),
                ('notebook', models.ForeignKey(help_text='Notebook this chat message belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='session_chat_messages', to='notebooks.notebook')),
                ('session', models.ForeignKey(help_text='Chat session this message belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='notebooks.chatsession')),
            ],
            options={
                'verbose_name': 'Session Chat Message',
                'verbose_name_plural': 'Session Chat Messages',
                'ordering': ['session', 'message_order', 'timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['notebook', 'status', '-last_activity'], name='notebooks_c_noteboo_be7fc7_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['session_id'], name='notebooks_c_session_6f1dbb_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['ragflow_session_id'], name='notebooks_c_ragflow_a3d39a_idx'),
        ),
        migrations.AddConstraint(
            model_name='chatsession',
            constraint=models.UniqueConstraint(condition=models.Q(('ragflow_session_id__isnull', False)), fields=('notebook', 'ragflow_session_id'), name='unique_ragflow_session_per_notebook'),
        ),
        migrations.AddIndex(
            model_name='sessionchatmessage',
            index=models.Index(fields=['session', 'message_order'], name='notebooks_s_session_0e9713_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionchatmessage',
            index=models.Index(fields=['session', 'timestamp'], name='notebooks_s_session_98ca68_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionchatmessage',
            index=models.Index(fields=['notebook', 'timestamp'], name='notebooks_s_noteboo_8bd98e_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionchatmessage',
            index=models.Index(fields=['sender', 'timestamp'], name='notebooks_s_sender_f87357_idx'),
        ),
        migrations.AddConstraint(
            model_name='sessionchatmessage',
            constraint=models.CheckConstraint(condition=models.Q(('message', ''), _negated=True), name='session_chat_message_not_empty'),
        ),
    ]
